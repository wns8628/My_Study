1.설치하고 

2.아톰에 프로젝트폴더 지정후 코드작성할파일생성 

3.cmd 로 cd 그 프로젝트폴더들어가면 작성한 프로젝트 파일이있겠지

4. node 파일이름  

하면  

5.노드제이에스의 런타임이 헬로월드.제이에스라는 파일을 읽어서 그코드를보고 동작한결과가 출력하는거임 


----------------------------------------------------------------------------------------

const http = require('http');

const hostname = '127.0.0.1';
const port = 1337;

http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain' });
  res.end('Hello World\n');
}).listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`);
});
------------------------------------------------------------------
var server = http.createServer(function(req,res){
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end('Hello World\n');                                        위와동일한코드임 이게더 이해가쉽죠? 
}); 								     콜백이있다(콜백함수) listen이 끝나면 콜백함수를실행
server.listen(port, hostname, function(){			     *그만큼 비동기의 이해가 중요
  console.log(`Server running at http://${hostname}:${port}/`);
 });
-------------------------------------------------------------------
이코드로 웹서버를 만들었다.

cmd로 이파일을실행시키면 running 이뜨는데 

클라이언트의 서비스요청을 기다리는 상태인것이다 여기서 브라우저에서 

아이피를 입력해 접속하면 hello world 라는 것이뜰것이다. 

---------------------------------------------------------------------------------------
위의 코드를이해할려면 

서버 , 클라이언트 , 아이피 , 포트 개념을 이해하면됨


                       - 데이터베이스서버
클라이언트 --->서버--- - 게임서버
                       - 채팅서버 
                       - 웹서버



이렇게 서버에 저렇게 많은 서버애플리케이션이 있을수가있는데 

포트번호를 통해서 웹서버에 연결시켜줘서 웹서버가 (리슨)응답하는것이다.

보통 웹서버는 80번포트를이용함 그래서 웹브라우저에서 생략가능

근데 저코드는 1337포트니깐 1337에 웹서버를 깔아놨으니 1337적어서 접속해야겠지 


-------------------------------------------

웹서버를 처음부터 끝까지 만든다는것은 존나 미친짓임 그래서 노드제이에스는 이미 만들어놨다!

그걸가져와서 쓰는법을배우는거임 


require('http');               =  (요구하다,필수적이다) 함수 인자로 http라고하는모듈이 즉 부품이 요구된다.
				  모듈을쓰고싶을떄 이함수를써야됨  


const http = require('http');  =  리턴값이 있어서 그것을 http라는변수에에 http모듈을 담은거임 
             
                                  const = 한번할당되면 바뀌지않게하는것임 


http.createServer              = http모듈에는 이함수가있다. http.Server를 리턴한다.

				 리턴한것의 메소드를또써서 listen을 쓴것이다 


--------------------------------------------------

os모듈을 쓸려면 

var os = require('os'); 이렇게 가져오고 

console.log(os.platform());  플랫폼 메소드를 실행해보면 자신의 운영체제를 가르쳐줌



http, os 등등                      == > node.js 에서제공하는 모듈 node.js에서만 사용가능 
date, string, array 등 모듈이많다  == > 자바스크립트가 제공하는모듈 다쓸수있다    


------------------------------------------------------

타인의 모듈을 사용해보자

 NPM  : 노드 패키지 매니저 (Node 계의 앱스토어) 

NPM 도구를사용해보자 

---------- 독립적으로 사용

 일단 uglify-js 를다운받는데 

	npm install uglify-js -g         = 독립적으로사용 g=글로벌

	npm install uglify-js 		 = 부품으로 사용     로컬 


 
 g로 다운받아서  파일을 실행하면 

 - uglifyjs 파일이름.js                           = 공백이제거되서 코드가만들어줌 = 최적화? 성능업 기능이지

 - uglifyjs 파일이름.js -m                        =  -m : 변수이름도 더작게만들어줌 
 
 - uglifyjs 파일이름.js -o 저장할파일이름 -m      =  미니파이된 파일저장 파일이름.min.js 이렇게함 관습



------------------부품으로사용 해서 자신의소프트웨어의 부품으로사용해보자 

개유명한 라이브러리 underscore 를써보자


 
npm의 패키지로 초기화를 시키는것 npm init 

프로젝트폴더는 npm 패키지의 디렉토리로 선언 그패키지의 여러가지정보들을 기록 = 패키지.json


npm install underscore --save          = 언더스코어를 우리프로젝트로다운받는데 save는 프로젝트를 재시작해도 유지되게?



사용---


var _ = require('underscore');         =  언더스코어부품을들고와서그 리턴된객체를  _(언더스코어,_관습임 ㅋㅋ) 변수에담아준다.

var arr = [3,6,9,1,12];                = 배열선언후             
console.log(_.first(arr));             = 맨앞의값가져오기
console.log(_.last(arr));              = 맨뒤에값 가져오기           훨씬가독성도좋고 쉽게알아냄 

이게바로 언더스코어 라이브러리이다 = 모듈 

이 모듈을 우리의 프로젝트에 포함해서 사용해봤다 

이걸잘 이해해야한다 npm이란무엇인지 ! 다시보자 나중에꼭 


부품을쓸려면 폴더를 npm init  즉 npm이관리하는 폴더가되어야 부품은받아서쓸수있다, 

----------------------------------------------------------------------------------------------- 
 정리 
  
-- NPM 에서 모듈을 다운받아쓰고싶다.내프로젝트의 부품으로--

1] NPM 에서 관리하는 폴더를 지정한다(NPM의 패키지로 초기화시킨다)  = 그폴더 가서 npm init

2] 그러면 패키지화 하는 몇가지설정나오는데 설정해줌  - 패키지.json 파일에 설정이 저장됨 

3] npm install 모듈이름 --save       그리고 그폴더에 깔아준다.  --save는 이프로젝트에 계속 필요하다는걸 명시 의존성 


그러면 이제 그모듈을 사용할 준비가완료됨.
 







 


 

























