*레이아웃


 *html 엘리먼트들은 크게 두가지로 구분됩니다. 

	화면 전체를 사용하는 태그   => block level element  
	화면의 일부를 차지하는 태그 => inline level element

    * display: block; 이속성으로 인라인을 블럭으로 블럭을 인라인으로 바꾸어줄수있다.

 
   

 *박스모델 

 -부피감을 결정(여백이런것)
   
               border:10px solid red;
            -테두리선- 두께 스타일 색- 

	    paddig : 컨텐츠과 테두리의 간격 
 
            margin : 엘리먼트와 엘리먼트의 간격 

            width  : 박스가로길이
                                  * width,height 는 인라인태그적용이안됨 
            height : 박스세로길이 

 *박스 사이징

  기존에 엘리먼트의 크기를 지정할 때 기준은 컨텐츠 기준이였다.그래서 보더나 패딩값이 더해지면 개발자가 예측한 값과 달랏다.
  그래서 box-sizing:border-box라는 속성이 탄생했는데 이렇게 하면 보더값까지 계산해서 엘리먼트 크기를 정한다.
  요새는 아예 모든 태그에 이 속성을 지정하고 코딩을 시작하는 경우가 많다.

	*{
               box-sizing: border-box;
         }                                     =이렇게해서 보더를기준으로 사이즈를정한다.


 * 마진겹침 

    마진이사라질때가있다. 씨발 좆같을때 ..

    마진겹침현상 세 가지
	
	1. 위,아래 엘리먼트들의 마진이 겹칠시 둘 중 마진이 큰게 둘 사이의 마진이 된다.
	
	2. 부모,자식 엘리먼트 사이에서 부모의 시각적 요소가 없어지면 부모,자식 마진 중 마진이 큰 쪽이 자식 마진
	   처럼 사용된다.
	
	3. 위,아래 엘리먼트들이 있을 때 위의 시각적 요소가 없어지면 시각적 요소가있는
           태그의 위,아래 중 마진이 큰 쪽이 마진처럼 사용된다. ?????????먼소리야 시발 내가적고도 헷갈리네 ㅡㅡ


 *포지션 

  엘리먼트의 위치를지정하는법 

  1. static(기본값) : 움직이지 않고 정적인 상태
  2. relative : 부모 엘리먼트를 기준으로 상대적으로 움직인다
     position: relative; 라고쓰고 위치를지정해야함

  3. absolute : position값이 relative인 부모를 기준으로(없다면 웹페이지의 가장 가장자리 기준) 움직인다.
	        자식의 위치값이 absolute이면 부모와의 관계가 끊기고 그래서 자신의 크기가 딱 컨텐츠만 해진다.	
		그리고 값을 아예 없애면 원래 위치로 돌아간다.

  4. fixed : 스크롤을 움직여도 지정된 위치에 고정된다.
    (absolute와 마찬가지로 부모와의 관계가 끊기고 크기는 자신의 컨텐츠만 해진다.)



 * 멀티컬럼 : 신문과 같이 여러개의 컬럼을 나눠서 레이아웃을 짜는 경우에 쓰는 기술

	- 여러가지 속성 
		column-count 	: 컬럼을 몇 개로 나눌지
		column-width	: 하나의 컬럼의 크기를 몇으로할지 (이 둘은 독립,조합가능)

		-gap 		: 컬럼 사이 간격
	        -rule-style 	: 컬럼 사이 선 스타일
	        -rule-width 	: 컬럼 사이 선 두께
		-rule-color 	: 컬럼 사이 선 색깔
		
		-column-span    : 특정 태그가 컬럼을 초월하게 하고 싶을 떄 all을 주면 됨(특정 태그에 사용) 


 * float

   본문에다가 이미지를 삽입하기위해 고안된 기능 (레이아웃잡을떄도씀)

   이미지를 넣고 

      
            img{
          	float:right;
        		}    이런식으로씀(위치지정)
   
이미지를 무시하고 들어갈때는 

ex)  <p style="clear:both">  
                     left
                     right         = 이렇게쓰면됨 


 이걸이용해서 레이아웃을 잡을수있다.

ex)   <style>
        *{
            box-sizing: border-box;
        }
        .container{
            width:540px;
            border: 1px solid grey;
            margin: auto;
        }
        header{
            border-bottom: 1px solid grey;
            }
        nav{
            float:left;
            border-right: 1px solid grey;
            width: 120;
        }
        article{
            float:left;
            width:300;
            border-left:1px solid gray; 
            border-right: 1px solid gray;
            margin-left: -1px;
        }
        aside{
            float: left;
            width: 120;
            border-left:1px solid gray; 
            margin-left: -1px;
     
        }
        footer{
            clear:both;
            border-top: 1px solid gray;
            text-align: center;
            padding: 20px;
        }     
    </style>


이런식으로  하면됨 보면알겠지?  근데 flex가있는데 이거는 아직 모든브라우저 지원이안되지만 모바일은다됨  

매우좋은 것이다. 






  



             



 


 
             
 
 




